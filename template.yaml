AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ejemplo de funciones Lambda con AWS SAM para la gestión de fondos.


Globals:
  Function:
    Runtime: python3.9
    Architectures:
        - x86_64
    MemorySize: 256
    Environment:
        Variables: 
          SUBSCRIPTIONS_TABLE: !Ref SubscriptionsTable
          FUNDS_TABLE: !Ref FundsTable
          CLIENTS_TABLE: !Ref ClientsTable
          TRANSACTION_HISTORY_TABLE: !Ref TransactionHistoryTable
          REGION: "us-east-1"
    Timeout: 15


Parameters:
  StageName:
    Type: String
    Default: dev
    Description: (Required) Enter dev, test, stag, prod. Default is dev.
    AllowedValues:
      - dev
      - test
      - stag
      - prod


Resources:
  FundsApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"  
        AllowMethods: "'GET,POST'" 
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'" 
  
  ClientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: !Sub CLIENTS-${StageName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

  FundsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub FUNDS-${StageName}
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S  
      KeySchema:
        - AttributeName: PK
          KeyType: HASH  
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  SubscriptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub SUBSCRIPTIONS-${StageName}
      AttributeDefinitions:
        - AttributeName: PK   
          AttributeType: S
        - AttributeName: SK   
          AttributeType: S
      KeySchema:
        - AttributeName: PK   
          KeyType: HASH
        - AttributeName: SK   
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5


  TransactionHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub TRANSACTIONS-${StageName}
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  SubscribeToFundFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: app.main
        FunctionName: !Sub 'subscribe_to_fund-function-${StageName}'
        CodeUri: ./lambdas/subscribeToFundFunction
        Description: Función Lambda para suscribirse a un fondo.
        Events:
          Subscribe:
            Type: Api
            Properties:
              RestApiId: !Ref FundsApi
              Path: /funds/subscribe
              Method: post
        Policies:
          - Statement:  
              Effect: Allow
              Action:
                - ses:*
              Resource: "*"
          - DynamoDBCrudPolicy:
              TableName: !Ref SubscriptionsTable
          - DynamoDBCrudPolicy:
              TableName: !Ref ClientsTable
          - DynamoDBCrudPolicy:
              TableName: !Ref FundsTable
          - DynamoDBCrudPolicy:
              TableName: !Ref TransactionHistoryTable
 
  CancelFundSubscriptionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.main
      FunctionName: !Sub 'cancel_fund_subscription-${StageName}'
      CodeUri: ./lambdas/cancelFundSubscriptionFunction
      Description: Función Lambda para cancelar la suscripción a un fondo.
      Events:
        Cancel:
          Type: Api
          Properties:
            RestApiId: !Ref FundsApi
            Path: /funds/cancel
            Method: post
      Policies:
          - Statement:  
              Effect: Allow
              Action:
                - ses:*
              Resource: "*"
          - DynamoDBCrudPolicy:
              TableName: !Ref SubscriptionsTable
          - DynamoDBCrudPolicy:
              TableName: !Ref ClientsTable
          - DynamoDBCrudPolicy:
              TableName: !Ref FundsTable
          - DynamoDBCrudPolicy:
              TableName: !Ref TransactionHistoryTable

  GetResourceFetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.main
      FunctionName: !Sub 'get_resource_fetcher_function-${StageName}'
      CodeUri: ./lambdas/getResourceFetcherFunction
      Description: Función Lambda para obtener el historial de transacciones.
      Events:
        History:
          Type: Api
          Properties:
            RestApiId: !Ref FundsApi
            Path: /resource
            Method: get
            RequestParameters:
              method.request.querystring.resourceType: true  # Cambia aquí, usa dos puntos (:) en lugar de guion (-)
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref FundsTable

  GetTransactionHistoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.main
      FunctionName: !Sub 'get_transaction_history-${StageName}'
      CodeUri: ./lambdas/getTransactionHistoryFunction
      Description: Función Lambda para obtener el historial de transacciones.
      Events:
        History:
          Type: Api
          Properties:
            RestApiId: !Ref FundsApi
            Path: /funds/history/{userId}
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionHistoryTable

  GetSubscriptionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.main
      FunctionName: !Sub 'get_subscriptions-${StageName}'
      CodeUri: ./lambdas/getSubscriptionsFuntion
      Description: Función Lambda para obtener las suscripciones.
      Events:
        History:
          Type: Api
          Properties:
            RestApiId: !Ref FundsApi
            Path: /funds/suscription/{userId}
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SubscriptionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref FundsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientsTable

  
    

Outputs:
  SubscribeToFundFunction:
    Description: "URL de la función Lambda resource"
    Value: !Sub "https://${FundsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/resource"

  GetResourceFetcherFunction:
    Description: "URL de la función Lambda para suscribirse a un fondo"
    Value: !Sub "https://${FundsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/resource"

  CancelFundSubscriptionFunction:
    Description: "URL de la función Lambda para cancelar suscripción a un fondo"
    Value: !Sub "https://${FundsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/funds/cancel"

  GetTransactionHistoryFunction:
    Description: "URL de la función Lambda para obtener el historial de transacciones"
    Value: !Sub "https://${FundsApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/funds/history"

  